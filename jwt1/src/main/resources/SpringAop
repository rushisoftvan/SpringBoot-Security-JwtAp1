##################################SPRING AOP #######################

Aop - Aspect orientated programming
cross cutting concern - Move Additional Service in our project to move in another class
and bind when and where it required

Aspect    : Aspect is class the provide additional service.
              like Transaction Management,logging, Security
Advice    :    which method available in Aspect It'called Advice.

Type of Advice(5)
 1) before advice          : Executing advice befor business method
 2) After advice           : Executing advice After business method finished
 3) Around advice          : Advice code made in two part
 4) After Returning advice : after Executing business method , once sucess advice Executing
 5) After throwing advice


PointCut  :  It is expression.It will select the business method which need advices.
            It can not specify what advices
JoinPoint : Linking process like Link the business method to advices It is called joint point

Target  : Pure Business class object code

weveing  : It is the process of mixing the Business class method and it needed advices

proxy   :  Final output of class/object

This is use for cross cutting concern
For Example we have ticket Booking application
we have some function like 1) cal discount 2) Total amount this are the business logic
Additional service(Logic)
2)Logging(use for the what is happened on production )
3)Security concept

There are we create two class one is business class and other class is Aspect class
In Business class we write our actual logic and in aspect class we write Additional service in methhod like
This logic we write In aspect class In method this method called Advice
Transaction Management ,logging and Security
1)Transaction Management

######################################
here new classes will be generated by using JDK Dynamic proxy concept
This classes called proxy classes It contains the business class method + advices
After creating proxy class one object is created for this proxy class it is called proxy object.
---------------------------------------------------------------------------------------------
for above thing do we have to vendor's
Spring aop xml based configuration.[legacy style]
Spring aop using  aspectj[new Style it is completely Annotation based]

for that we have to add dependency spring boot starter- aop